<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <!--
        - got no clue how this drawer layout works atm
        - but apparently there is no issue with putting the existing linear layout inside this drawer layout
        - inside this drawer layout and under linearlayout we use this navigationview which is a
        material/navigation thing for menus that we use to handle the "header" to enable the user to
        enter the drawer menu.
        not so sure about how this works but I suppose they will show me in detail when we go over
        the layout part of this tutorial series.

    -->

    <androidx.drawerlayout.widget.DrawerLayout
        android:id="@+id/drawerLayoutxmlvar"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">
            <fragment
                android:id="@+id/myNavHostFragment"
                android:name="androidx.navigation.fragment.NavHostFragment"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:defaultNavHost="true"
                app:navGraph="@navigation/navigation" />
        </LinearLayout>

        <!-- Container for contents of drawer - use NavigationView to make configuration easier -->
        <com.google.android.material.navigation.NavigationView
            android:id="@+id/navView"
            android:layout_width="wrap_content"
            android:layout_height="match_parent"
            android:layout_gravity="start"
            app:headerLayout="@layout/nav_header"
            app:menu="@menu/navdrawer_menu" />

    </androidx.drawerlayout.widget.DrawerLayout>
</layout>
